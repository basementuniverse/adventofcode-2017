<textarea id="input">
14/42
2/3
6/44
4/10
23/49
35/39
46/46
5/29
13/20
33/9
24/50
0/30
9/10
41/44
35/50
44/50
5/11
21/24
7/39
46/31
38/38
22/26
8/9
16/4
23/39
26/5
40/40
29/29
5/20
3/32
42/11
16/14
27/49
36/20
18/39
49/41
16/6
24/46
44/48
36/4
6/6
13/6
42/12
29/41
39/39
9/3
30/2
25/20
15/6
15/23
28/40
8/7
26/23
48/10
28/28
2/13
48/14
</textarea>
<textarea id="test-1">
0/2
2/2
2/3
3/4
3/5
0/1
10/1
9/10
</textarea>
<script>

const parse = r => {
    const p = r.split('/').map(parseFloat);
    return { a: p[0], b: p[1] };
};
const input = document.querySelector('#input').value.trim().split('\n').map(parse);
const findPin = n => input.filter(i => i.a == n || i.b == n);

const bridges = [];
function test(bridge, lastPin) {
    let pieces = findPin(lastPin);
    pieces = pieces.filter(i => bridge.indexOf(i) == -1);
    for (let i = 0; i < pieces.length; i++) {
        let newBridge = bridge.concat(pieces[i]);
        bridges.push(stats(newBridge));
        test(newBridge, pieces[i].a == lastPin ? pieces[i].b : pieces[i].a);
    }
}

function stats(b) {
    return {
        bridge: b.map(p => p.a + '/' + p.b).reduce((a, c) => a + ',' + c, ''),
        strength: b.reduce((a, c) => a + c.a + c.b, 0),
        length: b.length
    };
}

test([], 0);
console.log(`Part 1: ${bridges.reduce((a, c) => Math.max(a, c.strength), 0)}`);
console.log(`Part 2: ${bridges[bridges.reduce((a, c, i) => c.length >= bridges[a].length ? i : a, 0)].strength}`);

</script>
